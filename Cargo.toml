[package]
name = "zcash-wasm-benchmark"
version = "0.1.0"
authors = ["eric"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = 3
lto = true
codegen-units = 1

[package.metadata.wasm-pack.profile.release]
wasm-opt = ["-O3", "-O3"]

[dependencies]
wasm-bindgen = "0.2.84"
protobuf = "3.4.0"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

zcash_note_encryption = "0.4.0"
orchard = { version = "0.7.0", default-features = false }
getrandom = { version = "0.2.12", features = ["js"] }
web-sys = { version = "0.3.68", features = ["console"] }
rand = "0.8.5"
rayon = "1.8"
wasm-bindgen-rayon = { version = "1.2", optional = true }
wasm-bindgen-futures = "0.4.41"
serde = { version = "1.0.197", features = ["derive"] }
protobuf-json-mapping = "3.4.0"
anyhow = "1.0.80"
serde-wasm-bindgen = "0.6.5"


[dev-dependencies]
wasm-bindgen-test = "0.3.34"
wasm-bindgen-rayon = { version = "1.2" }
web-sys = { version = "0.3.68", features = ["console", "Window", "Navigator"] }

[build-dependencies]
protobuf-codegen = "3.4.0"
protobuf = "3.4.0"
# prost-build = { version = "0.12" }

[features]
default = ["console_error_panic_hook"]
parallel = ["wasm-bindgen-rayon", "orchard/multicore"]
no-bundler = ["wasm-bindgen-rayon/no-bundler"]
